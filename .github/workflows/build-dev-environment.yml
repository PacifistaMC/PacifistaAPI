# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build Dev Environment

on:
  push:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build-dev-maven:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - id: import_gpg
        name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        env:
          ENCRYPTION_KEY: hwJdNY1/yC3miXQR+Vw2V3qtt1e3FPJ2y62BKtROUJs=
          ENCRYPTION_IV: DKKyySzj8ao5WgraQpwj+A==
        run: mvn --batch-mode clean package -T 6

      - name: Publish Package Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: maven-packages
          path: modules/**/target/*.jar

  build-production-docker-images:
    needs: build-dev-maven
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download Package Artifacts
        uses: actions/download-artifact@v4
        with:
          name: maven-packages
          path: modules

      - name: Build pacifista api docker images and push
        env:
          IMAGE_TAG: dev
        run: chmod +x ./build-images.sh && ./build-images.sh

  update-kubernetes-cluster:
    needs:
      - build-production-docker-images

    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://dev.api.pacifista.fr

    steps:
      - name: Set up kubectl
        uses: azure/k8s-set-context@v4
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Update Kubernetes Dev Cluster
        run: cd kubernetes-dev && chmod +x ./deployServices.sh && ./deployServices.sh

  send-success-build-discord-notif:
    needs:
      - update-kubernetes-cluster

    runs-on: ubuntu-latest

    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_CI_STATUS }}
          DISCORD_USERNAME: Pacifista-API-Deploy
        uses: Ilshidur/action-discord@master
        with:
          args: '‚úÖ Pacifista-API üõ†Ô∏è**DEV** (dev.api.pacifista.fr) √† bien √©t√© d√©ploy√© sur le cluster Kubernetes !'
